<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=, initial-scale=1.0">
    <title>Responsive Dashboard using HTML CSS and Javascript</title>
    <!-- material icon -->
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Sharp" rel="stylesheet">
    <link rel="stylesheet" href="/css/dashboard.css">
    <link rel="stylesheet" href="https://unicons.iconscout.com/release/v4.0.0/css/line.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <script src="https://kit.fontawesome.com/yourcode.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.min.css" />
</head>

<body>
    <div class="container">
        <aside>
            <div class="top">
                <div class="logo">
                    <img src="/images/logo.png">

                    <h2 class="text-muted">PROJ<span class="danger">ECT-96</span></h2>
                </div>
                <div class="close" id="close-btn">
                    <span class="material-icons-sharp"> close</span>
                </div>
            </div>
            <div class="sidebar">
                <a href="/dashboard">
                    <span class="material-icons-sharp">grid_view</span>
                    <h3>Dashboard</h3>
                </a>
                <a href="#" class="active">
                    <span class="material-icons-sharp">person_outline</span>
                    <h3>Home</h3>
                </a>
                <a href="#">
                    <span class="material-icons-sharp">person_outline</span>
                    <h3>User Mangment</h3>
                </a>
                <a href="/attendanceBrowser">
                    <span class="material-icons-sharp">insights</span>
                    <h3>Attendance By Browser</h3>
                </a>
                <a href="/attendanceMobile">
                    <span class="material-icons-sharp">mail_outline</span>
                    <h3>Attendance By Camera</h3>
                    {{!-- <span class="message-count">26</span> --}}
                </a>
                <a href="/report">
                    <span class="material-icons-sharp">report</span>
                    <h3>User Report</h3>
                </a>
                <a href="#">
                    <span class="material-icons-sharp">settings</span>
                    <h3>Settings</h3>
                </a>
                <a href="/">
                    <span class="material-icons-sharp">logout</span>
                    <h3>Logout</h3>
                </a>
            </div>
        </aside>
        <!--------------- END OF ASIDE --------------->
        <main>
            <h1>Dashboard</h1>
            <div class="date">
                <input type="text" placeholder="Search..." id="searchInput" style="background: rgb(226,227,240);">
                <button onclick="startRecognition()"><i class="fa-solid fa-microphone fa-shake"></i></button>

            </div>
            <div class="insights">
                <div class="sales">
                    <h2>Weekly In/Out Data</h2>
                    <div class="chart-container">
                        <canvas id="attendanceChart" height="300"></canvas>
                    </div>
                </div>

                <div class="expenses">
                    <h2>Total Present, Absent, Halfday</h2>
                    <div class="attendanceSummary">
                        <canvas id="summaryChart" height="200"></canvas>
                    </div>

                </div>
                <!--------------END OF EXPENSES-------------->
                {{!-- <div class="income">
                    <span class="material-icons-sharp">stacked_line_chart</span>
                    <div class="middle">
                        <div class="left">
                            <h3>Total Income</h3>
                            <h1>$10,864</h1>
                        </div>
                        <div class="progress">
                            <svg>
                                <circle cx='38' cy='38' r='36'></circle>
                            </svg>
                            <div class="number">
                                <p>44%</p>
                            </div>
                        </div>
                    </div>
                    <small class="text-muted">Last 24 hours</small>
                </div> --}}
                <!-------------- END OF INCOME---------------->
            </div>
            <!-------------- END OF INSIGHTS--------------->
            <div class="recent-orders">
                <h2>Details</h2>
                <table id="userDataTable" class="table table-bordered">
                    <thead class="thead-dark">
                        <tr>
                            <th>Name</th>
                            <th>Date</th>
                            <th>Time</th>
                            <th>Type</th>
                            <th>Status</th>
                            {{!-- <th>Mark</th> --}}
                        </tr>
                    </thead>
                    <tbody>
                        {{#each users}}
                        <tr>
                            <td scope="row">{{user_name}}</td>
                            <td>{{date_column}}</td>
                            <td>{{time_column}}</td>
                            <td>{{A_type}}</td>
                            <td>{{range_status}}</td>
                            {{!-- <td>{{attendance_mark}}</td> --}}
                        </tr>
                        {{/each}}
                    </tbody>
                </table>

                <div style="display: flex;">
                    <a id="prevBtn">Previous</a>
                    <a id="nextBtn">Next</a>
                </div>
            </div>
        </main>
        <!---------------- END OF MAIN--------------->
        <div class="right">
            <div class="top">
                <button id="menu-btn">
                    <span class="material-icons-sharp">menu</span>
                </button>
                <div class="theme-toggler">
                    <span class="material-icons-sharp active">light_mode</span>
                    <span class="material-icons-sharp">dark_mode</span>
                </div>
                <div class="profile">
                    <div class="info">
                        <p style="text-align: left;">Hey,<b></b></p>
                        <p><b>{{users.[0].user_name}}</b></p>
                    </div>
                    <div class="profile-photo">
                        <img src="/profile/{{users.[0].Imagepath}}">
                    </div>
                </div>

            </div>
            <!------------ END OF TOP----------->
            <div class="recent-updates">
                <h2>Recent-Updates</h2>
                <div class="updates">
                    <div class="update">
                        <div class="profile-photo">
                            <img src="/images/profile-2.jpg">
                        </div>
                        <div class="message">
                            <p><b>Mike Tyson</b>recieved his order of Night lion tech GPS drone</p>
                            <small class="text-muted">2 Minutes Ago</small>
                        </div>
                    </div>
                    <div class="update">
                        <div class="profile-photo">
                            <img src="/images/profile-3.jpg">
                        </div>
                        <div class="message">
                            <p><b>Mike Tyson</b>recieved his order of Night lion tech GPS drone</p>
                            <small class="text-muted">2 Minutes Ago</small>
                        </div>
                    </div>
                    <div class="update">
                        <div class="profile-photo">
                            <img src="/images/profile-4.jpg">
                        </div>
                        <div class="message">
                            <p><b>Mike Tyson</b>recieved his order of Night lion tech GPS drone</p>
                            <small class="text-muted">2 Minutes Ago</small>
                        </div>
                    </div>
                </div>
            </div>
            <!------------ END OF RECENTS UPDATES ------------->
            <div class="sales-analytics">
            </div>

        </div>
    </div>
    </div>
    <script src="/js/index.js"></script>
    <script src="/js/orders.js"></script>
    <script src="/js/dashboard.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const user_name = "{{users.0.user_name}}";
            fetch(`/attendance/${user_name}`)
                .then((response) => response.json())
                .then((data) => {
                    const weekdays = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"];

                    const inData = data.filter((row) => row.A_type === 'in').map((row) => ({ x: row.weekday, y: convertTimeToY(row.time_column), time: row.time_column, type: 'In' }));
                    const outData = data.filter((row) => row.A_type === 'out').map((row) => ({ x: row.weekday, y: convertTimeToY(row.time_column), time: row.time_column, type: 'Out' }));

                    const ctx = document.getElementById("attendanceChart").getContext("2d");
                    new Chart(ctx, {
                        type: "line",
                        data: {
                            labels: weekdays,
                            datasets: [
                                {
                                    label: "In",
                                    data: inData,
                                    backgroundColor: "rgba(40, 167, 69, 0.2)",
                                    borderColor: "rgba(40, 167, 69, 1)",
                                    borderWidth: 1,
                                    fill: false,
                                    parsing: {
                                        yAxisKey: "y",
                                        xAxisKey: "x",
                                    },
                                },
                                {
                                    label: "Out",
                                    data: outData,
                                    backgroundColor: "rgba(220, 53, 69, 0.2)",
                                    borderColor: "rgba(220, 53, 69, 1)",
                                    borderWidth: 1,
                                    fill: false,
                                    parsing: {
                                        yAxisKey: "y",
                                        xAxisKey: "x",
                                    },
                                },
                            ],
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    reverse: false,
                                    grid: {
                                        drawBorder: false,
                                    },
                                    ticks: {
                                        stepSize: 2,
                                        callback: (value, index, values) => {
                                            const time = convertYToTime(value);
                                            return time;
                                        },
                                    },
                                },
                                x: {
                                    grid: {
                                        display: false,
                                    },
                                },
                            },
                            plugins: {
                                tooltip: {
                                    callbacks: {
                                        label: (context) => {
                                            const { datasetIndex, dataIndex } = context;
                                            const dataset = context.chart.data.datasets[datasetIndex];
                                            const dataItem = dataset.data[dataIndex];
                                            const { time, type } = dataItem;
                                            return `${time} - ${type}`;
                                        },
                                    },
                                },
                            },
                        },
                    });
                })
                .catch((error) => {
                    console.error("Error fetching attendance data:", error);
                });
        });



        function convertTimeToY(time) {
            const hour = parseInt(time.split(":")[0]);
            const minutes = parseInt(time.split(":")[1]);
            const totalMinutes = hour * 60 + minutes;
            return totalMinutes / 120;
        }

        function convertYToTime(y) {
            const totalMinutes = y * 120;
            const hour = Math.floor(totalMinutes / 60);
            const minutes = totalMinutes % 60;
            const formattedHour = hour.toString().padStart(2, "0");
            const formattedMinutes = minutes.toString().padStart(2, "0");
            return `${formattedHour}:${formattedMinutes}`;
        }


        document.addEventListener("DOMContentLoaded", function () {
            const user_name = "{{users.0.user_name}}";
            fetch(`/attendance/summary/${user_name}`)
                .then((response) => response.json())
                .then((data) => {
                    const summaryContainer = document.getElementById("summaryChart");

                    const totalDays = data.length;
                    const presentCount = data.reduce((sum, row) => sum + row.present_count, 0);
                    const halfdayCount = data.reduce((sum, row) => sum + row.halfday_count, 0);
                    const absentCount = data.reduce((sum, row) => sum + row.absent_count, 0);

                    const presentPercent = (presentCount / (totalDays * 1.0)) * 100;
                    const halfdayPercent = (halfdayCount / (totalDays * 1.0)) * 100;
                    const absentPercent = (absentCount / (totalDays * 1.0)) * 100;

                    const summaryData = {
                        labels: ["Present", "Half-day", "Absent"],
                        datasets: [
                            {
                                data: [presentPercent, halfdayPercent, absentPercent],
                                backgroundColor: ["rgba(40, 167, 69, 0.8)", "rgba(255, 193, 7, 0.8)", "rgba(220, 53, 69, 0.8)"],
                            },
                        ],
                    };

                    new Chart(summaryContainer, {
                        type: "doughnut",
                        data: summaryData,
                        options: {
                            plugins: {
                                legend: {
                                    display: true,
                                    position: "bottom",
                                    labels: {
                                        font: {
                                            size: 14,
                                        },
                                    },
                                },
                            },
                        },
                    });
                })
                .catch((error) => {
                    console.error("Error fetching attendance summary:", error);
                });
        });

    </script>
</body>

</html>